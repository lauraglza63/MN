import sympy
from sympy import symbols, diff

#definir la funcion
x= sympy.Symbol('x')
FUNCTION= sympy.sin(x)-sympy.log(x)
TOL=10**-100
LIM = 5

#verificar si el punto es valido
def valido(xo):
    x= sympy.Symbol('x')
    if FUNCTION.subs(x, xo)*df_2(xo):
        return True
    else:
        return False

def df(xo):
    x= sympy.Symbol('x')
    f= FUNCTION
    return sympy.diff(f, x).subs(x,xo)

def df_2(xo):
    x= sympy.Symbol('x')
    f= FUNCTION
    return sympy.diff(sympy.diff(f, x), x).subs(x,xo)

def newton(xo):
    x= sympy.Symbol('x')
    f= FUNCTION
    i=0
    error= 10**6
    while error> TOL and i<LIM:
        xn= xo-FUNCTION.subs(x, xo)/df(xo)
        error=abs(xn-xo)
        i+=1
        d={'iteracion': i, 'aproximacion': xn, 'error': error}
        print(d)
        xo=xn
    return xn

print(valido(2.3))
print(newton(2.3))

